---
title: "EDA: Exploring Interactive Graphs for Data Distributions in R"
subtitle: ""
subject: ""
date: 19/Nov/2022
date-modified: "`r Sys.Date()`"
code-link: true
self-contained-math: true
self-contained: true
bibliography: references.bib
abstract: How to ask Questions of your Data and answer with Stats, and interactive Bar charts and Histograms with the `echarts4r` package
---

## {{< iconify noto-v1 package >}} Setup the Packages

```{r}
#| label: setup
#| include: true
#| warning: false
#| message: false
#| echo: true
# options(tibble.print_min = 4L, tibble.print_max = 4L,digits = 3)
library(tidyverse)
library(mosaic) # package for stats, simulations, and basic plots
library(mosaicData) # package containing datasets
library(ggformula) # package for professional looking plots, that use the formula interface from mosaic
library(skimr) # Summary statistics about variables in data frames
library(NHANES) # survey data collected by the US National Center for Health Statistics (NCHS)

library(echarts4r) # Interactive graphs using Javascript in R
library(plotly) # An older more established package for interactive graphs using Javascript in R

```

```{r}
ggplot2::theme_set(new = theme_classic())
```

## {{< iconify fxemoji japanesesymbolforbeginner >}} Introduction

We will query our dataset, developing insights and new questions as each
Table or Bar/Histogram chart yields new information. This process of
exploration is **iterative**, **structured**, and **intuitive**.
Intermediate results may on occasion be messy or not very insightful!

We will consistently use the [**Project
Mosaic**](https://mosaic-web.org) ecosystem of packages in R (`mosaic`,
`mosaicData` and `ggformula`).

::: {.callout-tip style="background: beige"}
## Formula Interface

Note the standard method for all commands from the `mosaic` package:\
`goal( y ~ x | z, data = mydata, â€¦)` With `ggformula`, one can create
any graph/chart using:\
`gf_geometry(y ~ x | z, data = mydata)`\
OR\
`mydata %>% gf_geometry( y ~ x | z)`\
The second method may be preferable, especially if you have done some
data manipulation first! More later! `ggformula` supports many types of
plots (using `geometry`), such as scatter, bar, histogram, density,
boxplots, maps and many other statistical plots.
:::

::: {.callout-tip style="background: beige"}
## Interactive Graphs with `echarts4r`

We will also start using `echarts4r` side by side for interactive
graphs.

-   Every function in the package starts with `e_`.
-   You start coding a visualization by creating an echarts object with
    the `e_charts()` function. That takes your `data frame` and
    `x-axis column` as arguments.
-   Next, you add a function for the type of chart (`e_line()`,
    `e_bar()`, etc.) with the `y-axis series column name` as an
    argument.
-   The rest is mostly customization! `echarts4r` takes some effort in
    getting used to, but it totally worth it!
:::

The website for `echarts4r` is
<https://echarts4r.john-coene.com/articles/get_started.html>. You should
also quickly view this short introductory video on `echarts4r`:
{{< video https://youtu.be/OBJxIWEFHdo >}}

## {{< iconify pajamas issue-type-test-case >}} Case Study-1: Galton Dataset from `mosaicData`

Let us choose the famous `Galton` dataset:

```{r}
data("Galton")
Galton <- as_tibble(Galton)

```

### {{< iconify grommet-icons inspect >}} Look at the Data:

```{r}
skim(Galton)

```

What can we say about the dataset and its variables? How big is the
dataset? How many variables? What types are they, Quant or Qual? What
are the means, medians and inter-quartile ranges for the Quant
variables? If they are Qual, what are the *levels*? Are they *ordered*
levels?

There is a lot of Description generated by the `skimr::skim` command
(and equivalently by the `mosaic::inspect()` command)! Try both and see
which output suits you. The first table above describes the Qual
variables: `family` and `sex`. The second table describes the Quant
variables, and gives us their statistical summaries as well and a neat
little histogram to boot. The data are described as: [Type
`help(Galton)` in your Console]{.aside}

> A data frame with 898 observations on the following variables.
>
> -   `family` an ID for each family, a factor with levels for each
>     family
> -   `father` the father's height (in inches)
> -   `mother` the mother's height (in inches)
> -   `sex` the child's sex: F or M
> -   `height` the child's height as an adult (in inches)
> -   `nkids` the number of adult children in the family, or, at least,
>     the number whose heights Galton recorded.

### {{< iconify eos-icons counting >}} Counts, and Charts with Counts

Now that we know the variables, let us look at **counts** of data
observations(rows). We know from our examination of variable types that
counting of observations must be done on the basis of **Qualitative**
variables. So let us count and plot the counts in bar charts.

::: {.callout-note title="Question"}
Q.1 How many families in the data for each value of `nkids`(i.e. Count
of families by size)?
:::

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}
### Computations

```{r}
Galton_counts <- Galton %>%
  group_by(nkids) %>% 
  summarise(children = n()) %>% 
  # just to check
  mutate(
    No_of_families = as.integer(children/nkids),
    # Why do we divide
    
    running_count_of_children = cumsum(children),
    running_count_of_families = cumsum(No_of_families)) 
Galton_counts

```

### Using ggformula

```{r}
Galton_counts %>% 
  gf_col(No_of_families ~ nkids) %>% 
  gf_theme(theme_classic())

```

### Using echarts4r

```{r}
#| label: Question-1
Galton_counts %>% 
  e_charts(nkids) %>% 
  e_bar(No_of_families,
        colorBy = "data",
        legend = FALSE) %>% # Or "series"
  
# https://echarts4r.john-coene.com/articles/grid.html
# echarts4r does not "automatically" name the axes!
# And look at the "categorical" x-axis below!

  e_x_axis(name = "Family Size", nameLocation = "center", 
           nameGap = 25, type = "category") %>% 
  e_y_axis(name = "Count", nameLocation = "center", nameGap = 25,) %>% 
  
  e_tooltip(trigger = "item") %>% 
  e_title("No of Families of each size")

```

### Using plotly

```{r}

Galton_counts %>% 
  plot_ly(x = ~ nkids, y = ~ No_of_families) %>% 
  add_bars()

```
:::

**Insight**: There are 32 1-kid families; and $128/8 = 16$ 8-kid
families! There is one great great 15-kid family. (Did you get the idea
behind why we divide here?)

::: {.callout-note title="Question"}
Q.2. What is the count of Children by `sex` of the child and by family
size `nkids`?
:::

::: {.panel-tabset .nav-pills style="background: whitesmoke;"}
### Using ggformula

```{r}
#| message: false
Galton_counts_by_sex <- Galton %>% 
  mutate(family = as.integer(family)) %>% 
  group_by(nkids, sex) %>% 
  summarise(count_by_sex = n()) %>% 
  ungroup() %>% 
  group_by(sex)
Galton_counts_by_sex %>%
  gf_col(count_by_sex ~ nkids | sex, fill = ~ sex, data = .)
```


### Using echarts4r

```{r}
#| message: false
#| warning: false

Galton_counts_by_sex <- Galton %>% 
  mutate(family = as.integer(family)) %>% 
  group_by(nkids, sex) %>% 
  summarise(count_by_sex = n()) %>% 
  ungroup() %>% 
  group_by(sex) 
Galton_counts_by_sex

Galton_counts_by_sex%>% 
  e_charts(nkids) %>% 
  e_bar(count_by_sex) %>% 

  e_x_axis(name = "Family Size (nkids)", nameLocation = "center",
           nameGap = 20, type = "category") %>%
  e_y_axis(name = "How Many Children?",
           nameGap = 20,
           nameTextStyle = list(align = "center"),
           nameLocation = "center") %>%
  e_legend(right = 25, orient = "vertical") %>% 
  e_facet(cols = 2,rows = 1) %>% 
  e_tooltip(trigger = "item") %>% 
  e_title("Child Counts by Sex over Family Size")

```

### Using plotly
To be coded up. 

:::

**Insight**: Hmm...decent gender balance overall, across family sizes
`nkids`.

::: {.callout-note title="Follow-up Question"}
Follow up Question: How would we look for "gender balance" in individual
families? Should we look at the `family` column ?
:::

```{r}
#| message: false
#| warning: false
#| column: body-outset-right

Galton %>% 
  mutate(family = as.integer(family)) %>% 
  group_by(family, sex) %>% 
  summarise(count_by_sex = n()) %>% 
  ungroup() %>% 
  group_by(sex) %>% 
  
  e_charts(family) %>% 
  e_bar(count_by_sex) %>% 
  
  e_x_axis(name = "nkids", nameLocation = "center",
           nameGap = 25, type = "category") %>% 
  e_y_axis(name = "How Many Children?", 
           nameGap = 25, nameLocation = "center") %>% 
  e_legend(right = 5) %>% 
  e_facet(cols = 2,rows = 1) %>% 
  e_tooltip(trigger = "item") %>% 
  e_title("Child Counts by Sex over Family ID")

```

**Insight**: The No of Children were distributed similarly across family
size`nkids`... However, this plot is too crowded and does not lead to
any great insight. Using `family` ID was silly to plot against, wasn't
it? Not all exploratory plots will be "necessary" in the end. But they
are part of the journey of getting better acquainted with the data!

### {{< iconify icon-park overall-reduction >}} {{< icon-park chart-histogram >}} Stat Summaries and Distributions

OK, on to the Quantitative variables now! What Questions might we have,
that could relate *not to counts by Qual variables*, but to the numbers
in Quant variables. Stat measures, like their ranges, max and min?
Means, medians, distributions? And how these vary on the basis of *Qual*
variables? All this using `histograms` and `densities`.

::: {.callout-note title="Summary Stats"}
As Stigler[@stigler2016] said, **summaries** are the first thing to look
at in data. `skimr::skim` has already given us a lot summary data for
Quant variables. We can now use `mosaic::favstats` to develop these
further, by **slicing / facetting** these wrt other Qual variables. Let
us tabulate some quick stat summaries of the important variables in
`Galton`.
:::

```{r}

# summaries facetted by sex of child
measures <- favstats(~ height | sex, data = Galton)
measures


```

**Insight**: We saw earlier that the mean `height` of the Children was
66 inches. However, are Sons taller than Daughters? Difference in mean
`height` is 5 inches! AND...that was the same difference between
`fathers` and `mothers` mean heights! Is it so simple then?

::: {.callout-note title="Question"}
Q.4 How are the heights of the children distributed? Here is where we
need a `e_histogram`...
:::

```{r}

Galton %>% 
  e_charts() %>% 
  e_histogram(height) %>% 
  e_tooltip(trigger = "item") %>% 
  
  e_mark_line(data = list(xAxis = mean(Galton$height)),
              label = list(label = "Mean Height",
                           label.position = "end"),
              lineStyle = list(color = "red", width = 1.5, 
                               type = "solid")) %>% 
# See https://echarts.apache.org/en/option.html#series-line.markLine

  e_x_axis(name = "Height", nameLocation = "center") %>% 
  e_y_axis(name = "Counts", nameLocation = "center", nameGap = 30) %>% 
  e_title("Distribution of Heights in Galton")
  
```

**Insight**: Fairly symmetric distribution...but there are a few very
short and some very tall children! Try to change the no. of bins to
check of we are missing some pattern. This is not completely easy with
`echarts4r` which uses the "Sturges" algorithm to set the number of
bins. Need to figure this out from the [echarts Apache API
docs](https://echarts.apache.org/en/option.html#title).

::: {.callout-note title="Question"}
Q.5 Is there a difference in height distributions between Male and
Female children?(Quant variable sliced by Qual variable)
:::

We will use the raw `Galton` data and previously-computed `measures`:

```{r}

Galton %>%
  group_by(sex) %>% 
  e_charts(height = 300) %>% 
  e_density(height) %>% 
  e_mark_line(data = list(xAxis = measures %>% filter(sex == "M") %>% 
                            select(mean) %>% as.numeric()),
  # This code colours both v-lines red...how?
              lineStyle = list(color = "red", width = 1.5, 
                               type = "solid")) %>% 
  # Upto here gives one line in red colour, correctly

  e_mark_line(data = list(xAxis = measures %>% 
                            filter(sex == "F") %>%
                            select(mean) %>% as.numeric()),
              
  # This piece of code has no effect...wonder why not?
  # BOTH lines are in red ...why??
              lineStyle = list(color = "black", width = 1.5, 
                               type = "solid")) %>% 
  e_title("Distributions of Height by Sex in Galton") %>% 
  e_x_axis(name = "Height", nameLocation = "center") %>% 
  e_legend(right = 5)

```

**Insight**: There is a visible difference in average heights between
girls and boys. Is that significant, however? We will need a statistical
inference test to figure that out!! Claus Wilke[^1] says comparisons of
Quant variables across groups are best made between densities and not
histograms...

::: {.callout-note title="Question"}
Q.6 Are Mothers generally shorter than fathers?
:::

```{r}

Galton %>% 
  e_charts(height = 300) %>% 
  e_density(father) %>% 
  e_density(mother) %>% 
  e_mark_line(data = list(xAxis = mean(Galton$mother)),
              lineStyle = list(color = "red", width = 1.5, 
                               type = "solid")) %>% 
  e_mark_line(data = list(xAxis = mean(Galton$father),
              lineStyle = list(color = "black", width = 1.5, 
                               type = "solid"))) %>% 
  e_legend(right = 10)


```

**Insight**: Yes, moms are on average shorter than dads in this dataset.
Again, is this difference statistically significant? We will find out in
when we do **Inference**.

::: {.callout-note title="Question"}
Q.7a. Are heights of children different based on the number of kids in
the family? And For Male and Female children?
:::

```{r}

Galton %>%
  group_by(nkids) %>% 
  e_charts(height = 400) %>% 
  e_boxplot(height,colorBy = "data",
            itemStyle = list(borderWidth = 3)) %>% 
  e_y_axis(max = 80, min = 50, name = "height", nameLocation = "center",
           nameGap = 25, margin = 5) %>% # adds +/- 5 to y-axis limits
  
 e_x_axis(name = "Family Size", 
           nameLocation = "center", 
           nameGap = 25, type = "category") %>% # makes a category axis showing factors

  e_tooltip() %>% 
  e_title("Heights over Family Size")

```

::: {.callout-note title="Question"}
Q.7b. Are heights of children different for Male and Female children?
:::

```{r}
# Can do better at colouring/filling and facetting...
Galton %>%
  group_by(nkids,sex) %>% 
  e_charts(height = 400) %>% # no x-variable needed for boxplots
  e_boxplot(height,colorBy = "data",
            itemStyle = list(borderWidth = 3)) %>% 
  e_y_axis(max = 80, min = 50, name = "height", nameLocation = "center",
           nameGap = 25, margin = 5) %>% # adds +/- 5 to y-axis limits
  
  e_x_axis(name = "Family Size", 
           nameLocation = "center", 
           nameGap = 25, type = "category") %>% # makes a category axis showing factors

  e_tooltip() %>% 
  e_title("Heights by Sex over Family Size")

```

**Insight**: So, at all family "strengths", the male children are taller
than the female children. Box plots are used to show distributions of
numeric data values and compare them between multiple groups (i.e
Categorical Data, here `sex` and `nkids`).

::: {.callout-note title="Question"}
Q.8 Does the **mean** height of children in a family vary with the
number of children in the family? (family size)?
:::

```{r}
#| message: false
Galton %>% 
  group_by(nkids) %>% 
  summarise(mean_height = mean(height)) %>% 
  e_charts(nkids,height = 300) %>% 
  e_bar(mean_height,colorBy = "data", legend = FALSE) %>% 
  e_x_axis(name = "nkids",nameLocation = "center", nameGap = 25,
           type = "category") %>% 
  e_y_axis(name = "mean height", nameLocation = "center", nameGap = 25) %>% 
  e_tooltip(trigger = "item")

```

**Insight**: Hmm...The graph shows that mean heights do not vary much
with family size `nkids`. We saw this with the box plots earlier. This
would be useful information in a **Modelling** and **Prediction**
exercise.

::: {.callout-note title="Follow-up Question"}
Q. 8a. Is height difference between sons and daughters related to height
difference between `father` and `mother`?

Differences between `father` and `mother` heights influencing
`height`...this would be like `height ~ (father-mother)`. This would be
a relationship between **two** Quant variables. A histogram would not
serve here and we plot this as a **Scatter Plot**:
:::

```{r}
Galton %>% 
  group_by(family,sex) %>% 
  
  # Parental Height Difference
  mutate(diff_height = father - mother) %>% 
  select(family, sex, height, diff_height) %>% 
  ungroup() %>% 
  group_by(sex) %>% 

  e_charts(diff_height, height = 300) %>% 
  e_scatter(height, symbol_size = 8) %>%
  
  # Fit a trend line
  e_lm(height ~ diff_height,
       name = c("Female", "Male")) %>% 
  e_x_axis(max = 18, min = -5,
           name = "Father - Mother Height", 
           nameLocation = "center", nameGap = 25) %>% 
  e_y_axis(max = 80, min = 50,  
           name = "Children's Heights", 
           nameLocation = "center", nameGap = 25) %>% 
  e_tooltip(axisPointer = list(type = "cross"))

```

**Insight**: There seems no relationship, or a very small one, between
children's heights on the y-axis and the difference in parental height
differences on the x-axis...

And so on.....we can proceed from simple visualizations based on
Questions to larger questions that demand **inference** and
**modelling**. We hinted briefly on these in the above Case Study.

## {{< iconify pajamas issue-type-test-case >}} Case Study-2: Dataset from `NHANES`

Let us try the `NHANES` dataset. [Try `help(NHANES)` in your
Console.]{.aside}

```{r}
data("NHANES")
```

### {{< iconify grommet-icons inspect >}} Look at the Data

```{r}
#| column: body-outset-right
skim(NHANES)
```

Again, lots of data from `skim`, about the Quant and Qual variables.
Spend a little time looking through this output.

-   Which variables could have been data that was *given/stated* by each
    respondent?
-   And which ones could have been *measured* dependent data variables?
    Why do you think so?
-   Why is there so much *missing* data? Which variable are the most
    affected by this?\

### {{< iconify eos-icons counting >}} Counts, and Charts with Counts

::: {.callout-note title="Question"}
Q.1 What are the Education levels and the counts of people with those
levels?
:::

```{r}

NHANES %>% 
  group_by(Education) %>% 
  summarise(total = n())

# This also works
# tally(~Education, data = NHANES) %>% as_tibble()

```

**Insight**: The count goes up as we go from lower Education levels to
higher. Need to keep that in mind. How do we understand the large number
of `NA` entries?

::: {.callout-note title="Question"}
Q.2 How do counts of Education vs Work-status look like?
:::

```{r}
#| message: false
#| layout: [[30], [70]]
NHANES %>% 
  mutate(Education = as.factor(Education)) %>% 
  group_by(Work,Education) %>% 
  summarise(count = n())

NHANES %>% 
  group_by(Work, Education) %>% 
  summarise(count = n()) %>% 
  e_charts(Education, height = 300) %>% 
  e_bar(count) %>% 
  e_y_axis(max = 1750) %>% 
  e_x_axis(type = "category")  %>% e_tooltip()

```

**Insight**: Clear increase in the number of Working people as Education
goes from 8th Grade to College. No surprise. Are the `NotWorking` counts
a surprise?

### {{< iconify icon-park-outline overall-reduction >}} {{< icon-park-outline chart-histogram >}} Stat Summaries, Histograms, and Densities

::: {.callout-note title="Question"}
Q.3. What is the distribution of Physical Activity Days, across Gender?
Across Education?
:::

```{r}
#| layout-ncol: 2
#| column: body-outset-right
#| warning: false
# NHANES %>% gf_histogram( ~ PhysActiveDays | Education, fill = ~ Education)
NHANES %>% 
  group_by(Gender) %>% 
  e_charts(PhysActiveDays, height = 350) %>%  
  e_histogram(PhysActiveDays) %>% 
  e_x_axis(max = 8) %>% 
  e_facet(cols = 2, rows = 1) %>% e_tooltip()

NHANES %>% 
  group_by(Education) %>% 
  e_charts(PhysActiveDays, height = 350) %>% 
  e_histogram(PhysActiveDays) %>% 
  e_x_axis(max = 8) %>% 
  e_facet(rows = 1, cols = 3) %>% e_tooltip()


```

**Insight**: Can we conclude anything here? The **populations** in each
category are different, as indicated by the different y-axis scales, so
what do we need to do? Take percentages or ratios of course,
**per-capita**! How would one do that?

::: {.callout-note title="Question"}
Q.3a. What is the distribution of Physical Activity Days, across
Education and Sex, per capita?
:::

```{r}
#| layout-ncol: 2
NHANES %>% 
  group_by(Gender) %>% 
  summarize(mean_active = mean(PhysActiveDays,na.rm = TRUE))

NHANES %>% 
  group_by(Education) %>% 
  summarize(mean_active = mean(PhysActiveDays,na.rm = TRUE))

```

**Insight**: Hmm..no great differences in per-capita physical activity.
Females are marginally more active than males. No need to even plot
this.

::: {.callout-note title="Question"} Q.4. How are people Ages
distributed across levels of Education?

```{r}
#| warning: false
#| layout-nrow: 1
# Recall there are missing data
# gf_boxplot(Age ~ Education, 
#            fill = ~ Education, # Always a good idea to fill boxes
#            data = NHANES) %>% 
#   gf_theme(theme_classic()) %>% plotly::ggplotly()

NHANES %>% 
  mutate(Education = as.factor(Education)) %>% 
  group_by(Education) %>% 
  e_charts(height = 300) %>% # Should not mention x-variable!!!
  e_boxplot(Age, colorBy = "data",
             itemStyle = list(borderWidth = 3)) %>% 
  e_y_axis(name = "Age", nameLocation = "middle", max = 100, min = 0, nameGap = 25) %>% 
  e_x_axis(type = "category", axisTick = list(alignWithLabel = TRUE), 
           axisLabel = list(interval = 0)) %>% # ensures all tick labels on x-axis
  e_tooltip()

```

**Insight**: Older age groups are somewhat more heavily represented in
groups with lower educational status. But College Graduates also have
slightly older age distributions...*So do College Educated people live
longer?* That is a nice Question for some Inferential Modelling. And how
to interpret the NA group?

::: {.callout-note title="Question"}
Q.5. How is Education distributed over Race?
:::

```{r}
#| warning: false
#| message: false
#| layout: [[25], [75]]

NHANES_by_Race1 <- NHANES %>% 
  group_by(Race1) %>% 
  summarize(population = n())
NHANES_by_Race1

NHANES %>% group_by(Education, Race1) %>% 
  summarize( n = n()) %>% 
  left_join(NHANES_by_Race1, by = c("Race1" = "Race1")) %>% 
  mutate(percapita_educated = (n/population)*100) %>% 
  ungroup() %>%  
  group_by(Race1) %>% # Aesthetic 1
  e_charts(Education, height = 350) %>%  # Aesthetic #2
  e_bar(percapita_educated) %>% # Aesthetic #3
  
  e_x_axis(type = "category", axisTick = list(alignWithLabel = TRUE), 
           axisLabel = list(interval = 0)) %>% 
  e_y_axis(max = 35) %>% 
  e_facet(rows = 2,cols = 3) %>% 
  e_flip_coords()


```

**Insight**: Blacks, Hispanics, and Mexicans tend to have fewer people
with college degrees, as a percentage of their population. Asians and
other immigrants have a significant tendency towards higher education!

::: {.callout-note title="Question"}
Q.6. What is the distribution of people's BMI, split by Gender? By
Race1?
:::

```{r}
#| warning: false
#| message: false
#| layout-ncol: 2
# One can also plot both histograms and densities in an overlay fashion,

NHANES %>% group_by(Gender) %>% 
  e_charts(height = 300) %>% 
  e_density(BMI)

NHANES %>% group_by(Race1) %>% 
  e_charts(height = 350) %>% 
  e_density(BMI) %>% 
  e_facet(rows = 2, cols = 3)

```

**Insight**: Non-white races tend to have larger portions of their
populations with larger BMI. So these races perhaps tend to obesity. By
and large BMI distributions are normal.

::: {.callout-note title="Question"}
Q.7. What is the distribution of people's Testosterone level vs BMI?
Split By Race1?
:::

```{r}
#| warning: false
NHANES %>%  
  gf_density2d(Testosterone ~ BMI | Race1) %>% 
  gf_theme(theme_classic()) %>% 
plotly::ggplotly()

```

**Insight**: Low testosterone levels exist across all BMI values, but
healthy levels of T exists only over a smaller range of BMI.

Note: `echarts4r` does not seem to provide a 2D-density plot...yet!!

## {{< iconify pajamas issue-type-test-case >}} Case Study #3: A complete example with Banned Books

Here is a dataset from Jeremy Singer-Vine's blog, [Data Is
Plural](https://www.data-is-plural.com/). This is a list of all books
banned in schools across the US.

{{< downloadthis ../data/banned.csv dname="banned.csv" label="Download the data"banned books icon="database-fill-down" type="info" >}}

### {{< iconify grommet-icons inspect >}} Look at the Data

```{r, bar-charts}
banned <- readxl::read_xlsx(path = "../data/banned.xlsx",
                            sheet = "Sorted by Author & Title")
skim(banned)

```

**Insight**: Clearly the variables are *all* Qualitative, except perhaps
for *Date of Challenge/Removal*, (which in this case has been badly
mangled by Excel) So we need to make **counts** based on the\* levels\*
of the Qual variables and plot Bar/Column charts. We will not find a use
for histograms or densities.

Let us try to answer this question, about counts:

::: {.callout-note title="Question"}
What is the count of banned books by type and by US state?
:::

```{r}
banned_by_state <- 
  banned %>% 
  group_by(State) %>% 
  summarise(total = n()) %>% 
  ungroup()
banned_by_state

banned %>% 
  group_by(State, `Type of Ban`) %>% 
  summarise(count = n()) %>% 
  ungroup() %>% 
  left_join(., banned_by_state, by = c("State" = "State")) %>% 
  
 #  pivot_wider(.,id_cols = State,
 #              names_from = `Type of Ban`,
 #              values_from = count) %>% janitor::clean_names() %>% 
 #  replace_na(list(banned_from_libraries_and_classrooms = 0,
 #                  banned_from_libraries = 0,
 #                  banned_pending_investigation = 0,
 #                  banned_from_classrooms = 0)) %>% 
 # mutate(total = sum(across(where(is.integer)))) %>%
gf_col(count ~ reorder(State, total), 
          fill = ~ `Type of Ban`) %>% 
  gf_labs(x = "Count of Banned Books",
          y = "State") %>% 
  gf_refine(coord_flip()) %>% 
  gf_theme(theme = theme_minimal())


```

**Insight**: Do you want to live in Texas? If you are both illiterate
and interested in horses, perhaps.

## {{< iconify fluent-mdl2 decision-solid >}} Conclusion

And that is a wrap!! Try to work with this procedure:\

-   Inspect the data using `skim` or `inspect`
-   Identify Qualitative and Quantitative variables\
-   Notice variables that have missing data\
-   Develop Counts of Observations for combinations of Qualitative
    variables (factors)\
-   Develop Histograms and Densities, and slice them by Qualitative
    variables to develop facetted plots as needed
-   At each step **record the insight and additional questions!!**
-   Continue with other *Descriptive Graphs* as needed\
-   And then on the *inference* and *modelling*!!

## {{< iconify ooui references-rtl >}} References

1.  Sharon Machlis, *Plot in R with echarts4r*, InfoWorld
    <https://www.infoworld.com/article/3607068/plot-in-r-with-echarts4r.html>
2.  A detailed analysis of the NHANES dataset,
    <https://awagaman.people.amherst.edu/stat230/Stat230CodeCompilationExampleCodeUsingNHANES.pdf>

[^1]: Fundamentals of Data Visualization (clauswilke.com)
